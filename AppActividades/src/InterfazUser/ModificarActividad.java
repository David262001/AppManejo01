/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package InterfazUser;

import Clases.Conexion;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author chris
 */
public class ModificarActividad extends javax.swing.JFrame {

    /**
     * Creates new form ModificarActividad
     */
    public ModificarActividad() {
        initComponents();
    }
    
    public void cargarTabla() {
        try {
            String[] titulos = {"CREADOR", "ESTADO", "FECHA", "OBSERVACION"};
            String[] registros = new String[4];
            modelo = new DefaultTableModel(null, titulos);
            Conexion cc = new Conexion();
            java.sql.Connection cn = cc.conectar();
            String sql = " ";
            sql = "select* from actividades";
            java.sql.Statement psd = cn.createStatement();
            ResultSet rs = psd.executeQuery(sql);
            while (rs.next()) {
                registros[3] = rs.getString("OBS_ACT");                
                registros[1] = rs.getString("EST_ACT");
                registros[0] = rs.getString("PER_ACT");
                registros[2] = rs.getString("FEC_ACT");                
         
                modelo.addRow(registros);
            }
            jtblActividades.setModel(modelo);
        } catch (SQLException ex) {
            JOptionPane.showConfirmDialog(null, ex);
        }

    }
    public void editarDatos() {
      
        if (jtxtCreador.getText().isEmpty() || jtxtCreador.getText() == "") {
            JOptionPane.showMessageDialog(null, "Debe ingresar el nombre del creador");
            jtxtCreador.requestFocus();
        } else if (jtxtFecha.getText().isEmpty() || jtxtFecha.getText() == "") {
            JOptionPane.showMessageDialog(null, "Debe ingresar la fecha");
            jtxtFecha.requestFocus();
        } else if (jtxaObs.getText().isEmpty() || jtxaObs.getText() == "") {
            JOptionPane.showMessageDialog(null, "Debe ingresar la observacion");
            jtxaObs.requestFocus();
        } else if (jcbxEstado.getSelectedItem().toString().isEmpty() || jcbxEstado.getSelectedItem().toString() == "") {
            JOptionPane.showMessageDialog(null, "Debe seleccionar el estado de la actividad");
            jcbxEstado.requestFocus();
        } else {
            try {
                Conexion c = new Conexion();
                Connection cn = c.conectar();
                String sql = "";
               
                    sql = "update actividades set PER_ACT='" + jtxtCreador.getText()
                            + "' ,EST_ACT='" + jcbxEstado.getSelectedItem().toString() + "' ,FEC_ACT='"
                            + jtxtFecha.getText() + "' ,OBS_ACT='" + jtxaObs.getText() + "'"
                            ;
                                         

                PreparedStatement psd = cn.prepareStatement(sql);

                int n = psd.executeUpdate();
                if (n > 0) {
                    JOptionPane.showMessageDialog(this, "Se actualizo correctamente");
                   // ActualizarActividad();
                    limpiarTextos();
                    cargarTabla();
                }
            } catch (SQLException ex) {
                //JOptionPane.showMessageDialog(null, ex);
            }
        }
    }
      public void limpiarTextos() {
        jtxtCreador.setText(" ");
        jtxtFecha.setText(" ");
        jtxaObs.setText(" ");
        jcbxEstado.setSelectedItem(" ");
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ModificarActividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ModificarActividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ModificarActividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ModificarActividad.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ModificarActividad().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
